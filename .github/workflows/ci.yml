name: Kadena CI

on:
  push:
    branches:
      - main
      - "v*.[0-9]"
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  tests:
    name: Run tests
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: ["24"]
        elixir: ["1.13.4"]
    env:
      MIX_ENV: test
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        id: beam
        with:
          otp-version: "24"
          elixir-version: "1.13.4"
      - uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-
      - name: Install Dependencies
        run: mix deps.get
      - name: Check Formatting
        run: mix format --check-formatted
      - name: Restore PLT cache
        uses: actions/cache@v2
        id: plt_cache
        with:
          key: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          restore-keys: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          path: |
            priv/plts
      # Create PLTs if no cache was found
      - name: Create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt
      - name: Run dialyzer
        run: mix dialyzer --format short
      - name: Run Tests and Coverage
        run: mix coveralls.github --parallel --flagname otp-${{ matrix.otp }}-elixir-${{ matrix.elixir }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Credo
        run: mix credo --strict

  finish:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Set BUILD_NUMBER for Pull Request event
        if: github.event_name == 'pull_request'
        run: echo "BUILD_NUMBER=${{ github.event.pull_request.head.sha }}-PR-${{ github.event.pull_request.number }}" >> $GITHUB_ENV
      - name: Set BUILD_NUMBER for Push event
        if: github.event_name == 'push'
        run: echo "BUILD_NUMBER=${{ github.sha }}" >> $GITHUB_ENV
      - name: Coveralls Finished
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUILD_NUMBER: ${{ env.BUILD_NUMBER }}
        run: |
          curl -k "https://coveralls.io/webhook" -d "repo_token=$GITHUB_TOKEN&repo_name=$GITHUB_REPOSITORY&payload[build_num]=$BUILD_NUMBER&payload[status]=done"
